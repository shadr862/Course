#include <ext/pb_ds/assoc_container.hpp> // Common file
#include <ext/pb_ds/tree_policy.hpp>
#include <functional> // for less
#include <bits/stdc++.h>
using namespace __gnu_pbds;
using namespace std;
typedef tree<int, null_type, less<int>, rb_tree_tag,
             tree_order_statistics_node_update>
    pbds;
#define p pair<int,int>
typedef long long ll;
const ll INF=1e18;



int main()
{
    ll t;
    cin>>t;
    while(t--)
    {
        ll n,l,r,ans=0,x,y;
        cin>>n>>l>>r;
        ll arr[n];
        for(ll i=0;i<n;i++)
        {
            cin>>arr[i];

        }
        sort(arr,arr+n);

        for(ll i=0;i<n;i++)
        {
            x=upper_bound(arr+i+1,arr+n,r-arr[i])-arr;
            y=lower_bound(arr+i+1,arr+n,l-arr[i])-arr;
            ans+=x-y;
        }
        cout<<ans<<endl;


    }


}

#include <bits/stdc++.h>
using namespace std;
#define fast_in_out  ios_base::sync_with_stdio(false);cin.tie(0);cout.tie(0);
#define ln "\n"
#define ll long long
#define ff first
#define ss second
#define pb push_back
#define mp make_pair
#define mem(x, n) memset(x, n, sizeof(x))
#define all(x) x.begin(), x.end()
#define rall(v)   v.rbegin(),v.rend()
#define array(something, size) something, something + size
#define sz(a) a.size()

const ll INF=1e18;
const double pii = acos(-1);
const ll mod = 1e9+7;
const ll N = 1e8+1;
ll c=1;

bool prime(ll n)
{
    for(ll i=2;i*i<=n;i++)
    {
        if(n%2==0)return 0;
    }
    return 1;
}

ll lowerbound(vector<ll>&v,ll x)
{
    ll lo=0,h=sz(v);

    while(lo<h)
    {
        ll mid=(lo+h)/2;

        if(x<=v[mid])
        {
            h=mid;
        }
        else
        {
            lo=mid+1;
        }
    }

    return lo;
}

ll upperbound(vector<ll>&v,ll x)
{
    ll lo=0,h=sz(v);

    while(lo<h)
    {
        ll mid=(lo+h)/2;

        if(x<v[mid])
        {
            h=mid;
        }
        else
        {
            lo=mid+1;
        }
    }

    return lo;
}


void solve()
{
    ll n,q;
    cin>>n>>q;
    vector<ll> v(n);

    for(ll i=0;i<n;i++)
    {
       cin>>v[i];
    }


    while(q--)
    {
        ll x,y;
        cin>>x>>y;
        ll a=lowerbound(v,x);
        ll b=upperbound(v,y);

        cout<<b-a<<endl;

    }


}
int main()
{
    fast_in_out;
    ll t;
    cin>>t;
    ll c=1;
	while(t--)
	{
	    cout<<"Case "<<c<<':'<<endl;
		solve();
		c++;
	}
	return 0;
}