arr{1 2 3 4}
que{2 3 5 7 10 20}
#include <bits/stdc++.h>
using namespace std;

#define ll long long int
#define pb push_back
#define mp make_pair
const ll INF=1e18;
const double pii = acos(-1);
const int mod = 1000000007;
const int N = (int) 1e5;

ll lcm(ll a,ll b)
{
    return (a/__gcd(a,b))*b;
}

int fo[N], fe[N];

void solve()
{

    int arr[] = {1, 3, 4};
    int q[] = {3, 5, 7, 20};

    bitset<32> b;
    b[0] = 1;
    for (int i = 0; i < 4; i++) {
        b |= (b << arr[i]);
        cout << b << '\n';
    }
    for (int i = 0; i < 4; i++) {
        cout << q[i] << "-> ";
        if (b[q[i]])
            cout << "Subset sum exists\n";
        else
            cout << "Subset sum doesn't exist\n";
    }


}
int main()
{
    ll t;
    //cin>>t;
    //while(t--)
    {
        solve();

    }

	return 0;
}
