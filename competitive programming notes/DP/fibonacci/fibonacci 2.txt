#include <ext/pb_ds/assoc_container.hpp> // Common file
#include <ext/pb_ds/tree_policy.hpp>
#include <functional> // for less
#include <bits/stdc++.h>
using namespace __gnu_pbds;
using namespace std;
typedef tree<int, null_type, less<int>, rb_tree_tag,
             tree_order_statistics_node_update>
    pbds;
#define p pair<int,int>
typedef long long ll;
const ll INF=1e18;
int dp[100];
void inatializer(int n)
{
    for(int i=0;i<=n;i++)
    {
        dp[i]=-1;
    }
}
int fib(int n)
{
    if(dp[n]!=-1)
    {
        return dp[n]=dp[n];

    }



       if(n==0||n==1)
         {
            return dp[n]=n;
         }
       else
          {
            return dp[n]=fib(n-1)+fib(n-2);

          }




}
int main()
{


    int n,r;
    cin>>n;
    inatializer(n);

    r=fib(n);
    cout<<r<<endl;
    






    }