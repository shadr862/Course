#include <bits/stdc++.h>
using namespace std;

#define ll long long
#define pb push_back
//#define mp make_pair
const ll INF=1e18;
const double pii = acos(-1);
const int mod = 1e9+7;
const int N = (ll) 1e6;

ll lcm(ll a,ll b)
{
    return (a/__gcd(a,b))*b;
}
vector<ll> adj[N];
map<ll,ll> mp;
bool vis[N];
ll level[N];
//max money in one home
void DFSPre(ll source)
{

    vis[source]=1;
   // cout<<level[source]<<endl;
    for(ll i=0;i<adj[source].size();i++)
    {
        ll k=adj[source][i];
        if(!vis[k])
        {
            level[k]=level[source]+1;
            DFSPre(k);
        }
    }

}
inline void add(ll a,ll b)
{
    adj[a].pb(b);
    adj[b].pb(a);
}


inline void solve()
{

      ll n,m;
      cin>>n>>m;

     for(ll i=0;i<m;i++)
     {
         ll x,y;
         cin>>x>>y;
         add(x,y);
     }
     level[1]=1;
     DFSPre(1);


     map<ll,ll> cnt;
     //counting every level anchestor in tree
     for(ll i=1;i<=n;i++)
     {
         cnt[level[i]]++;
     }

     ll q;
     cin>>q;
     while(q--)
     {
         ll x;
         cin>>x;
         cout<<cnt[level[x]]<<endl;
     }



}
int main()
{
    ll t;
    cin>>t;
    while(t--)
    {

        solve();

    }

	return 0;
}


/*
14 13
1 2
1 3
1 4
2 5
2 6
4 7
4 8
4 9
6 10
6 11
7 12
7 13
8 14

5
3
5
7
10
12


*/