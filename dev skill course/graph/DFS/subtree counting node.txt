#include <bits/stdc++.h>
using namespace std;

#define ll long long
#define pb push_back
//#define mp make_pair
const ll INF=1e18;
const double pii = acos(-1);
const int mod = 1e9+7;
const int N = (ll) 1e6;

ll lcm(ll a,ll b)
{
    return (a/__gcd(a,b))*b;
}
vector<ll> adj[N];
ll subtree[N];
bool vis[N];
//cycle detection in directed graph
ll DFSPre(ll source)
{

    vis[source]=1;
    ll ans=1;
    for(ll i=0;i<adj[source].size();i++)
    {
        ll k=adj[source][i];
        if(!vis[k])
        {
            ans+=DFSPre(k);
        }
    }
    subtree[source]=ans;

    return ans;

}
inline void add(ll a,ll b)
{
    adj[a].pb(b);
    adj[b].pb(a);
}


inline void solve()
{

      ll n,m;
      cin>>n>>m;

     for(ll i=0;i<m;i++)
     {
         ll x,y;
         cin>>x>>y;
         add(x,y);
     }
     DFSPre(1);


     for(ll i=1;i<=n;i++)
     {
         cout<<subtree[i]<<endl;
     }







}
int main()
{
    ll t;
    cin>>t;
    while(t--)
    {

        solve();

    }

	return 0;
}


/*
1
7 6
1 2
1 3
2 4
2 5
3 6
3 7


*/