#define LIM 1003

using namespace std;

int n, cap, coin[LIM];
int dp[LIM][LIM],dr[LIM][LIM];

int f(int N, int last) {

    if(N==0 && last<n)
    {
        dp[N][last]=1;
        return 1;
    }
    if(dp[N][last]!=-1) return dp[N][last];

    int ans=0;

    for(int i=last+1;i<=N;i++)
    {
        //cout<<"in:  "<<N-i<<" "<<i<<" "<<ans<<endl;
        ans+=f(N-i,i);
        // cout<<"out   "<<N-i<<" "<<i<<" "<<ans<<endl;
    }
    dp[N][last]=ans;
    return ans;
}

int main() {
 
    cin>>n;
    memset(dp,-1,sizeof dp);
    cout<<f(n,0)<<endl;

    for(int i=0;i<=n;i++)
    {
        for(int j=0;j<=n;j++)
        {
            cout<<dp[i][j]<<" ";
        }
        cout<<endl;
    }

}

/*
6
*/how many staircase are possible to make by using n brick//increasing order and coloum should be more than one